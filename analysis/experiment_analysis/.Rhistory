library(dplyr)
library(lme4)
# Load and clean data
experiment_data = read.csv('../../data/final_experiments_data/default_data.csv')
experiment_data$is_practice = experiment_data$is_practice == "True"
experiment_data$many_options = experiment_data$og_baskets == 5
experiment_data$many_features = experiment_data$num_features == 5
experiment_data$revealed_no_values = experiment_data$uncovered_values == '[]'
experiment_data$points_metalevel_reward = experiment_data$net_earnings * 3000
experiment_data$chose_nudge = experiment_data$chose_nudge == "True"
# Get test data for analysis
experiment_test = subset(experiment_data,is_practice==F)
# H2: The relative probability of selecting the default will be higher wheen there are many options
# H3: The relative probability of selecting the default will be higher when there are many features
# H4: The relative probability fo selecting the default will be lower on trials with higher weights deviation
model_2 = glm(chose_nudge ~ trial_nudge * (many_options + many_features + weights_deviation),data=experiment_test,family='binomial')
print(summary(model_2))
# H6: Trials with higher weight deviation will benefit have less benefit from default nudges
model_3 = lm(points_metalevel_reward ~ trial_nudge * weights_deviation,data=experiment_test)
print(summary(model_3))
library(dplyr)
# Change csv to reference relevant experiment data
# Can also be optimal_nudging_changing_initial_costs_data.csv
experiment_string = 'optimal_nudging_changing_costs_data.csv'
# Load data
experiment_data = read.csv(paste0('../../data/final_experiments_data/',experiment_string))
experiment_data$is_practice = as.logical(experiment_data$is_practice)
# Make greedy reference level
experiment_data$nudge_type = factor(experiment_data$nudge_type, levels = c("greedy", "extreme", "random"))
test_data = subset(experiment_data,is_practice==F)
test_data %>% group_by(participant_id) %>% summarize(mean_bonus = mean(net_earnings))
a = data.frame(test_data %>% group_by(participant_id) %>% summarize(mean_bonus = mean(net_earnings)))
a
a = data.frame(test_data %>% group_by(participant_id) %>% summarize(mean_bonus = sum(net_earnings)))
a
mean(a$mean_bonus)
a = data.frame(test_data %>% group_by(prolific_pid) %>% summarize(mean_bonus = sum(net_earnings)))
c = read.csv('../../../nudging/data_analysis/calculated_bonuses/attention-experiment-13-bonuses.csv')
mean(c$total_bonus)
